.wrap {
	color: var(--c_font_dark);

	overflow: hidden;
	overflow-y: scroll;
	width: 100vw;
	height: 100vh;

	position: fixed;
	top: 0;
	left: 0;

	--gap: 1vw;
	--viewWidth: clac(100vw - var(--viewWidth)*2);
	padding: var(--gap);
	margin: 0 calc(50% - 50vw); // 左右MAX

	.scroll {

		.list {
			--viewWidth: 100vw;
			--gap: 1vw;

			// 段組レイアウト
			display: flex;
			flex-flow: column;
			gap: var(--gap);

			>li {
				cursor: pointer;

				>ul {
					display: flex;
					gap: var(--gap);

					>.work {
						--width: calc((var(--viewWidth) - var(--gapCount) * var(--gap)) / var(--aspectSum) * var(--aspect));
						width: var(--width);
						height: calc(var(--width) / var(--aspect));
					}
				}
			}
		}
	}
}

.work {
	position: relative;

	.tmb {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}

	.categoryList {
		--fontSize: min(1vw, 1.1rem);
		font-size: var(--fontSize);
	}

	.meta {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		padding: 1.5rem;
		background: rgba(#000, 0.5);
		backdrop-filter: blur(2px);
		opacity: 0;
		transition: 0.3s opacity;
		will-change: opacity;

		@include hover {
			opacity: 1;
		}

		@media (max-width: 800px) {
			* {
				opacity: 0;
			}
		}

		.list_title {
			margin-bottom: 0.3rem;
			font-weight: bold;
		}
	}
}

.catList {
	font-size: 1.6rem;
	position: fixed;
	padding: 4vmin 0;
	bottom: 0;
	left: 0;
	z-index: 99;

	@media (max-width: 800px) {
		bottom: $main_marginTop;
	}

	display: flex;
	flex-flow: column;
	gap: 0.4em;

	&>li {
		&>a {
			font-weight: bold;
			padding: 0.7vmin 5vmin;
			padding-right: 4vmin;
			text-shadow: var(--c_font_reversal) 0 0 0.3em,
				var(--c_font_reversal) 0 0 0.5em, var(--c_font_reversal) 0 0 0.5em,
				var(--c_font_reversal) 0 0 1em;

			@include hover {
				text-shadow: none;

				&+.subCatList {
					opacity: 0.3;
					right: 2vmin;
				}
			}
		}

		width: fit-content;
		position: relative;

		.subCatList {
			width: 9999vw;
			width: max-content;
			font-size: 0.8em;
			font-weight: normal;
			display: flex;
			align-items: center;
			-webkit-text-fill-color: var(--c_font);
			// height: 100%;
			overflow: hidden;
			opacity: 0;
			position: absolute;
			top: 50%;
			right: 50%;
			transform: translate(100%, -50%);
			transition: 0.6s opacity, 0.3s right;
			will-change: opacity, right;
			pointer-events: none;

			&::before {
				content: "";
				width: 1em;
				height: 0.05em;
				opacity: 0.5;
				background: var(--c_font);
				border-radius: 999rem;
				margin-right: 0.2em;
			}

			&>li {
				&:not(:last-child)::after {
					content: ",";
					margin-right: 0.2em;
				}
			}
		}
	}
}

.tmb {
	background: var(--c_bg_body);

	// background: rgba(var(--c_bg_body_rgb), 0.5);
	&::after {
		background: rgba(var(--c_bg_body_reversal_rgb), 0.03);
		content: "";
		width: 100%;
		height: 100%;
		position: absolute;
		top: 0;
		left: 0;
	}
}

.categoryList {
	position: absolute;
	right: 0;
	top: 0;
	display: flex;
	flex-wrap: wrap;
	transition: 0.3s transform;
	text-transform: uppercase;
	z-index: 9;

	>li {
		padding: calc(var(--fontSize) / 6) calc(var(--fontSize) / 2.5);
		margin-right: calc(var(--fontSize) / 2);
		color: var(--c_font_light);
		background-color: var(--c_bg_light);
		opacity: 0.6;
	}
}

.tagList {
	display: flex;
	flex-wrap: wrap;
	opacity: 0.85;

	>li {
		&:not(:last-child)::after {
			content: ",";
			margin-right: 0.5em;
		}
	}
}

.WorksOverlay {
	position: fixed;
	top: 0;
	right: 0;
	width: 100vw;
	height: var(--100vh);
	overflow: hidden;
	overflow-y: scroll;
	background: rgb(#000, 0.5);
	backdrop-filter: blur(3px);
	cursor: pointer;
	z-index: 999;

	// 出たり入ったり
	opacity: 0;
	transition: 0.3s opacity;

	.main {
		transform: translateY(100%);
		transition: 0.3s transform;
	}

	&.open {
		opacity: 1;

		.main {
			transform: translateY(0);
		}
	}

	--main_width: 40rem;

	@media (max-width: 800px) {
		--main_width: 100vw;
	}

	.main {
		pointer-events: none;

		width: var(--main_width);
		height: fit-content;
		min-height: var(--100vh);
		display: flex;
		flex-flow: column;
		justify-content: flex-end;

		position: absolute;
		top: 0;
		right: 2.5vw;

		--padding: min(4vw, 2.5rem);

		@media (max-width: 800px) {
			right: 0;
		}

		z-index: 2;

		>.main_inner {
			// ヘッダー余白
			margin-top: calc($main_marginTop + var(--padding));

			@media (max-width: 800px) {
				margin-top: var(--padding);
				// margin-top: var(--padding);
				// height: calc(fit-content - var(--padding));
				// margin-bottom: calc(-1 * var(--padding));
			}

			cursor: default;
			pointer-events: auto;
			height: fit-content;
			padding: var(--padding);
			padding-top: 0;
			--padding-bottom: calc(var(--padding) * 0.9 + env(safe-area-inset-bottom, 0));
			padding-bottom: var(--padding-bottom);

			@media (max-width: 800px) {
				padding-bottom: calc(var(--padding-bottom) + $main_marginTop);
			}

			position: relative;
			--gap: 1rem;

			&::after {
				box-shadow: var(--shadow_menu), var(--shadow_menuSub);
				content: "";
				background: var(--c_bg_body);
				width: 100%;
				--gapTop: min(10rem, 40%);
				height: calc(100% - var(--gapTop));
				border-radius: 3rem 3rem 0 0;
				position: absolute;
				top: var(--gapTop);
				right: 0;
				z-index: -1;
			}

			.tmb {
				box-shadow: var(--shadow_menu), var(--shadow_menuSub);
				max-width: 100%;
				// max-height: 60vh;
				aspect-ratio: var(--aspect);
				margin: auto;
				cursor: zoom-in;
				position: relative;
				overflow: hidden;

				img {
					width: 100%;
					height: 100%;
				}

				&.youtube {
					cursor: pointer;

					&::before {
						content: url("/youtube-dark.svg");
						width: 16%;
						position: absolute;
						top: 50%;
						left: 50%;
						transform: translate(-50%, -50%);
						z-index: 1;
						transition: opacity 0.1s;
					}

					@include hover {
						&::before {
							opacity: 0.8;
						}
					}
				}

				>.youtube {
					position: absolute;
					top: 0;
					left: 0;
					width: 100%;
					height: 100%;
					z-index: 2;
					display: none;

					&.play {
						display: block;
					}
				}

				>.categoryList {
					--fontSize: 0.9rem;
					font-size: var(--fontSize);
				}

				&+* {
					margin-top: calc(var(--gap) * 1.5);
				}
			}

			.title {
				font-size: 1.5rem;
				font-weight: bold;
				// hover
				display: inline-block;
				position: relative;
			}

			.meta {
				opacity: 0.3;

				.tagList {
					opacity: 1;
				}
			}

			article {
				// letter-spacing: 0.07em;
				margin-top: var(--gap);

				p {
					margin-top: 1em;

					strong {
						font-weight: bold;
					}
				}

				a {
					color: var(--gradient_1);
					text-shadow: 0 0 0.05em rgba(var(--c_bg_body_reversal_rgb), 0.7),
						0 0 0.2em rgba(var(--c_bg_body_reversal_rgb), 0.2);

					@include hover {
						opacity: 0.7;
					}
				}

				hr {
					width: 30%;
					height: 0.2rem;
					// background: rgba(var(--c_bg_reversal_rgb), 0.03);
					border-radius: 99rem;
					margin: 1em auto;
				}

				h2 {
					font-weight: bold;

					&:not(:first-child, hr + h2) {
						margin-top: 1.5rem;
					}

					display: flex;
					align-items: center;

					&::after {
						flex: 1;
						content: "";
						width: 100%;
						height: 0.1rem;
						background: rgba(var(--c_bg_reversal_rgb), 0.06);
						border-radius: 99rem;
						display: block;
						margin-left: 1em;
					}
				}

				h3 {
					font-weight: bold;
					margin-top: 1.2rem;
				}

				iframe {
					width: 80%;
					aspect-ratio: 16/9;
					margin: 1rem auto;
					display: block;
				}
			}
		}
	}

	.relatedScrollBox {
		position: fixed;
		bottom: 0;
		left: 0;
		width: 100vw;
		overflow: hidden;
		overflow-x: scroll;
		z-index: -1;
		--padding: 3vw;
		padding: var(--padding);
		// box-sizing: content-box;
		pointer-events: auto;

		opacity: 0;
		transform: translateX(-100%);
		transition: 0.3s opacity, 0.3s transform;

		&.open {
			opacity: 1;
			transform: translateX(0);
		}

		>ul {
			--hight: 25vh;
			height: var(--hight);
			width: fit-content;
			display: flex;
			--gap: 1rem;
			gap: var(--gap);

			&::after {
				content: "";
				width: calc(var(--main_width) + var(--padding));
				height: 100%;
			}
		}

		.work {
			height: 100%;
			width: calc(var(--hight) * var(--aspect));
		}
	}
}