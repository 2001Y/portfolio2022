import Link from "next/link";
import Image from "next/image";
import classNames from "classnames";

import { useEffect, useLayoutEffect, useState } from "react";
import { useRouter } from "next/router";
import c_V from "styles/_V.module.scss";

import c_header from "styles/header.module.scss";

export default function Output() {
	let [profile, setProfile] = useState(true);
	let [state_menu, set_state_menu] = useState(true);

	let router = useRouter();
	useEffect(() => {
		// OSダークモード反映
		if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
			setTimeout(() => toggleDarkmode(true), 500);
		}

		// グラデアニメーション
		let count = 0;
		setInterval(() => {
			count = (count + 0.5) % 360;
			color(count);
		}, 100);

		let pointCount = 3;
		let colorRange = 100;
		function color(e) {
			[...Array(pointCount)].map((_, i) => {
				let h = (e + (colorRange / pointCount) * i) % 360;
				document.body.style.setProperty(
					"--gradient_" + i,
					"hsl(" + h + ",100%,70%)"
				);
			});
		}

		// subMenuを自動的に閉じる
		window.setTimeout(() => {
			set_state_menu(false);
			setProfile(false);
		}, 2000);
	}, []);

	let [darkmode, setDarkmode] = useState(false);
	function toggleDarkmode(e) {
		let nowValue = e || !darkmode;
		setDarkmode(nowValue);
		window.document.documentElement.setAttribute("data-darkmode", nowValue);
	}

	let [search, setSearch] = useState(false);
	let [voting, setVoting] = useState(false);
	let [pageName, setPageName] = useState(router.pathname);

	let [spState, setSpState] = useState(false);
	useEffect(() => {
		window.addEventListener("resize", winSize);
		winSize();
	});
	function winSize() {
		if (window.innerWidth < 800) {
			setSpState(true);
		} else {
			setSpState(false);
		}
	}

	let nowPath = pageName.split("/")[1];
	if (!nowPath) {
		nowPath = "index";
	}
	return (
		<header className={c_header.header}>
			<section className={classNames(c_header.fixed)}>
				<section>
					<div
						className={classNames(c_header.headerTitle, c_header.border)}
						onClick={() => setProfile(!profile)}
					>
						<div className={classNames(c_V.animeBG, c_header.profileIMGwrap)}>
							<div className={c_header.profileIMG}>
								<Image
									src="https://github.com/2001y.png"
									width={50}
									height={50}
									alt="2001Yのプロフォール画像"
								/>
							</div>
						</div>
						<h1>
							2001Y<span>@Y20010920T</span>
						</h1>
						<div className={c_header.subMenu}>
							<ul className={classNames({ [c_header.subMenu_open]: profile })}>
								{[
									["Twitter", "https://twitter.com/y20010920t", "#twitter"],
									[
										"Instagram",
										"https://www.instagram.com/y20010920t",
										"#instagram",
									],
									[
										"Facebook",
										"https://www.facebook.com/Yoshiki.Tam",
										"#facebook",
									],
								].map((e, i) => (
									<>
										<li key={i}>
											<Link href={e[1]}>
												<a
													target="_blank"
													onClick={() => setPageName(e[1])}
													className={classNames(
														c_header.icon,
														c_V.animeBG_after
													)}
													style={{ "--icon": "url(" + e[2] + ")" }}
												></a>
											</Link>
										</li>
									</>
								))}
							</ul>
						</div>
					</div>
				</section>
				<section>
					<nav className={classNames(c_header.menu, c_header.border, nowPath)}>
						<ul
							className={classNames(c_V.animeBG_after, c_header.border_after)}
						>
							{[
								["Works", "/"],
								["Blog", "/blog"],
								["About", "/about"],
							].map((e, i) => (
								<>
									<li key={i}>
										<Link href={e[1]}>
											<a onClick={() => setPageName(e[1])}>{e[0]}</a>
										</Link>
									</li>
								</>
							))}
						</ul>
					</nav>
				</section>
				<section>
					<div
						className={classNames(
							c_header.iconBtn,
							c_header.spMenu,
							c_header.border
						)}
						style={{ "--icon": "url(#menu)" }}
						onClick={() => set_state_menu(!state_menu)}
					></div>
					<div className={classNames({ [c_header.subMenu]: spState })}>
						<ul
							className={classNames(c_header.setting, {
								[c_header.subMenu_open]: state_menu,
							})}
						>
							<li
								className={classNames(c_header.searchWrap, {
									[c_header.searchWrap_true]: search,
								})}
							>
								<form
									onSubmit={(e) => {
										e.preventDefault();

										// console.log(e);
										router.push({
											pathname: "/search",
											query: {
												...router.query,
												s: e.target[0].value,
											},
										});
									}}
								>
									<input required type="search" placeholder="検索" />
								</form>
								<div
									className={classNames(
										c_header.iconBtn,
										c_V.animeBG_after,
										{ [c_header.search_true]: search },
										c_header.border
									)}
									style={{ "--icon": "url(#search)" }}
									onClick={() => setSearch(!search)}
								></div>
							</li>
							<li>
								<div
									className={classNames(
										c_header.iconBtn,
										c_V.animeBG_after,
										{ [c_header.darkmode_true]: darkmode },
										c_header.border
									)}
									style={{ "--icon": "url(#darkmode)" }}
									onClick={() => toggleDarkmode()}
								></div>
							</li>
						</ul>
					</div>
				</section>
			</section>
			{/* <section className={String(voting)}>
				<h2>GOOD & BAD</h2>
			</section> */}

			<div
				className={classNames(
					c_V.animeBG,
					c_header.filter,
					c_header.iconBtn,
					nowPath
				)}
				style={{ "--icon": "url(#filter)" }}
				onClick={() => toggleDarkmode()}
			></div>

			<svg style={{ position: "fixed" }}>
				<clipPath id="darkmode" clipPathUnits="objectBoundingBox">
					<path
						transform={"scale(" + 1 / 16 + "," + 1 / 16 + ")"}
						d="M7.9835 7.83393C7.45999 7.29795 7.02997 6.71213 6.69343 6.07644C6.36935 5.44075 6.14188 4.78013 6.011 4.09458C5.88012 3.40903 5.85208 2.71726 5.92686 2.01925C5.98919 1.3337 6.15746 0.660621 6.43168 0C5.6838 0.149575 4.96087 0.405094 4.26286 0.766566C3.56484 1.12804 2.92293 1.60168 2.33709 2.18752C1.56429 2.97278 0.984697 3.85152 0.598295 4.82376C0.19943 5.80846 0 6.81184 0 7.83393C0 8.85602 0.19943 9.85317 0.598295 10.8254C0.984697 11.8101 1.56429 12.6888 2.33709 13.4616C3.12236 14.2469 4.0011 14.8327 4.97333 15.2191C5.95803 15.6055 6.96141 15.7987 7.9835 15.7987C9.0056 15.7987 10.009 15.6055 10.9937 15.2191C11.9659 14.8327 12.8447 14.2469 13.6299 13.4616C14.2033 12.8883 14.6738 12.2526 15.0415 11.5546C15.4092 10.8566 15.6616 10.1336 15.7987 9.38576C15.1506 9.65998 14.4775 9.82825 13.7795 9.89057C13.0815 9.96536 12.3928 9.93731 11.7135 9.80644C11.0342 9.67556 10.3767 9.44808 9.741 9.12401C9.09284 8.78746 8.50702 8.35744 7.9835 7.83393Z"
					/>
				</clipPath>
				<clipPath id="search" clipPathUnits="objectBoundingBox">
					<path
						transform={"scale(" + 1 / 17 + "," + 1 / 17 + ")"}
						d="M10.3472 10.3569C11.2118 9.4923 11.6441 8.45414 11.6441 7.24238C11.6441 6.03062 11.2135 4.99409 10.3521 4.13276C9.49079 3.27143 8.45426 2.84077 7.2425 2.84077C6.03074 2.84077 4.99421 3.27143 4.13288 4.13276C3.27155 4.99409 2.84089 6.03062 2.84089 7.24238C2.84089 8.45414 3.27155 9.49067 4.13288 10.352C4.99421 11.2133 6.03074 11.644 7.2425 11.644C8.45426 11.644 9.48915 11.215 10.3472 10.3569ZM16.6745 15.4168C16.6745 15.7574 16.5501 16.0521 16.3012 16.301C16.0523 16.5499 15.7575 16.6744 15.4169 16.6744C15.0632 16.6744 14.7685 16.5499 14.5327 16.301L11.1627 12.9409C9.99022 13.7531 8.68351 14.1592 7.2425 14.1592C6.30584 14.1592 5.41014 13.9774 4.55536 13.6139C3.70057 13.2504 2.96371 12.7591 2.34473 12.1402C1.72575 11.5212 1.2345 10.7843 0.870973 9.92952C0.507445 9.07474 0.325684 8.17903 0.325684 7.24238C0.325684 6.30572 0.507445 5.41002 0.870973 4.55523C1.2345 3.70045 1.72575 2.96358 2.34473 2.3446C2.96371 1.72562 3.70057 1.23438 4.55536 0.870851C5.41014 0.507323 6.30584 0.325562 7.2425 0.325562C8.17916 0.325562 9.07486 0.507323 9.92964 0.870851C10.7844 1.23438 11.5213 1.72562 12.1403 2.3446C12.7593 2.96358 13.2505 3.70045 13.614 4.55523C13.9776 5.41002 14.1593 6.30572 14.1593 7.24238C14.1593 8.68339 13.7532 9.9901 12.941 11.1626L16.311 14.5325C16.5533 14.7749 16.6745 15.0696 16.6745 15.4168Z"
					/>
				</clipPath>
				<clipPath id="twitter" clipPathUnits="objectBoundingBox">
					<path
						transform={"scale(" + 1 / 15 + "," + 1 / 15 + ")"}
						d="M13.4626 4.9912C13.4626 5.06158 13.4626 5.12903 13.4626 5.19355C13.4626 5.25807 13.4626 5.32551 13.4626 5.39589C13.4626 6.39297 13.2719 7.40175 12.8905 8.42229C12.5091 9.44282 11.9489 10.3666 11.2099 11.1935C10.4709 12.0205 9.55913 12.6921 8.4745 13.2082C7.38987 13.7361 6.13839 14 4.72003 14C3.84994 14 3.01562 13.8798 2.21705 13.6393C1.41847 13.3988 0.679506 13.0616 0.00012207 12.6276C0.131231 12.651 0.256379 12.6628 0.375569 12.6628C0.494759 12.6628 0.619907 12.6628 0.751016 12.6628C1.46616 12.6628 2.14851 12.5513 2.7981 12.3284C3.44768 12.1056 4.03468 11.7889 4.55912 11.3783C3.89166 11.3666 3.29571 11.1642 2.77128 10.7713C2.24684 10.3783 1.88332 9.8827 1.68069 9.28446C1.77605 9.29619 1.87438 9.30792 1.97569 9.31965C2.077 9.33138 2.17533 9.33724 2.27068 9.33724C2.41371 9.33724 2.55078 9.32551 2.68189 9.30205C2.81299 9.27859 2.9441 9.25513 3.07521 9.23167C2.37199 9.09091 1.78499 8.74487 1.31419 8.19355C0.843386 7.64223 0.607988 6.99707 0.607988 6.25806V6.22287C0.822531 6.32845 1.04601 6.41642 1.27843 6.4868C1.51085 6.55718 1.75221 6.59824 2.00251 6.60997C1.58534 6.34017 1.25161 5.98241 1.00131 5.53666C0.751015 5.09091 0.625867 4.60997 0.625867 4.09384C0.625867 3.81232 0.664603 3.54252 0.742077 3.28446C0.819551 3.02639 0.92384 2.78592 1.05495 2.56305C1.43636 3.02053 1.85948 3.43695 2.32432 3.81232C2.78916 4.18769 3.28975 4.51026 3.82611 4.78006C4.36246 5.04986 4.93456 5.26686 5.54243 5.43109C6.13839 5.59531 6.7522 5.69501 7.38391 5.73021C7.36007 5.6129 7.3422 5.4956 7.33028 5.3783C7.31836 5.261 7.3124 5.1437 7.3124 5.02639C7.3124 4.19354 7.61037 3.48094 8.20632 2.88856C8.80227 2.29618 9.52932 2 10.3875 2C10.8285 2 11.2427 2.08798 11.63 2.26393C12.0174 2.43988 12.3482 2.67449 12.6223 2.96774C12.9799 2.89736 13.3225 2.80059 13.6503 2.67742C13.9781 2.55425 14.285 2.40469 14.571 2.22874C14.4638 2.58065 14.2939 2.90029 14.0615 3.18768C13.8291 3.47507 13.552 3.71261 13.2302 3.90029C13.5401 3.8651 13.844 3.80645 14.142 3.72434C14.4399 3.64223 14.726 3.54252 15.0001 3.42522C14.7856 3.73021 14.5502 4.01466 14.2939 4.27859C14.0377 4.54252 13.7606 4.78006 13.4626 4.9912Z"
					/>
				</clipPath>
				<clipPath id="instagram" clipPathUnits="objectBoundingBox">
					<path
						transform={"scale(" + 1 / 15 + "," + 1 / 15 + ")"}
						d="M9.2677 9.26758C9.75598 8.77929 10.0001 8.19011 10.0001 7.5C10.0001 6.80989 9.75598 6.22071 9.2677 5.73242C8.77942 5.24414 8.19023 5 7.50012 5C6.81001 5 6.22083 5.24414 5.73254 5.73242C5.24426 6.22071 5.00012 6.80989 5.00012 7.5C5.00012 8.19011 5.24426 8.77929 5.73254 9.26758C6.22083 9.75586 6.81001 10 7.50012 10C8.19023 10 8.77942 9.75586 9.2677 9.26758ZM10.2247 4.77539C10.9734 5.52409 11.3478 6.43229 11.3478 7.5C11.3478 8.56771 10.9734 9.47591 10.2247 10.2246C9.47603 10.9733 8.56784 11.3477 7.50012 11.3477C6.43241 11.3477 5.52421 10.9733 4.77551 10.2246C4.02681 9.47591 3.65247 8.56771 3.65247 7.5C3.65247 6.43229 4.02681 5.52409 4.77551 4.77539C5.52421 4.02669 6.43241 3.65234 7.50012 3.65234C8.56784 3.65234 9.47603 4.02669 10.2247 4.77539ZM12.1388 2.86133C12.3146 3.03711 12.4025 3.2487 12.4025 3.49609C12.4025 3.74349 12.3146 3.95508 12.1388 4.13086C11.963 4.30664 11.7514 4.39453 11.504 4.39453C11.2566 4.39453 11.045 4.30664 10.8693 4.13086C10.6935 3.95508 10.6056 3.74349 10.6056 3.49609C10.6056 3.2487 10.6935 3.03711 10.8693 2.86133C11.045 2.68555 11.2566 2.59766 11.504 2.59766C11.7514 2.59766 11.963 2.68555 12.1388 2.86133ZM8.24231 1.34766C7.79309 1.34766 7.5457 1.34766 7.50012 1.34766C7.45455 1.34766 7.20553 1.34603 6.75305 1.34277C6.30058 1.33952 5.95715 1.33952 5.72278 1.34277C5.4884 1.34603 5.17428 1.35579 4.7804 1.37207C4.38651 1.38835 4.05123 1.4209 3.77454 1.46973C3.49784 1.51855 3.2651 1.57878 3.07629 1.65039C2.75077 1.7806 2.46432 1.9694 2.21692 2.2168C1.96952 2.46419 1.78072 2.75065 1.65051 3.07617C1.5789 3.26498 1.51868 3.49772 1.46985 3.77441C1.42102 4.05111 1.38847 4.38639 1.37219 4.78027C1.35592 5.17416 1.34615 5.48828 1.3429 5.72266C1.33964 5.95703 1.33964 6.30045 1.3429 6.75293C1.34615 7.20541 1.34778 7.45443 1.34778 7.5C1.34778 7.54557 1.34615 7.79459 1.3429 8.24707C1.33964 8.69955 1.33964 9.04297 1.3429 9.27734C1.34615 9.51172 1.35592 9.82584 1.37219 10.2197C1.38847 10.6136 1.42102 10.9489 1.46985 11.2256C1.51868 11.5023 1.5789 11.735 1.65051 11.9238C1.78072 12.2494 1.96952 12.5358 2.21692 12.7832C2.46432 13.0306 2.75077 13.2194 3.07629 13.3496C3.2651 13.4212 3.49784 13.4814 3.77454 13.5303C4.05123 13.5791 4.38651 13.6117 4.7804 13.6279C5.17428 13.6442 5.4884 13.654 5.72278 13.6572C5.95715 13.6605 6.30058 13.6605 6.75305 13.6572C7.20553 13.654 7.45455 13.6523 7.50012 13.6523C7.5457 13.6523 7.79472 13.654 8.24719 13.6572C8.69967 13.6605 9.04309 13.6605 9.27747 13.6572C9.51184 13.654 9.82597 13.6442 10.2198 13.6279C10.6137 13.6117 10.949 13.5791 11.2257 13.5303C11.5024 13.4814 11.7351 13.4212 11.924 13.3496C12.2495 13.2194 12.5359 13.0306 12.7833 12.7832C13.0307 12.5358 13.2195 12.2494 13.3497 11.9238C13.4213 11.735 13.4816 11.5023 13.5304 11.2256C13.5792 10.9489 13.6118 10.6136 13.6281 10.2197C13.6443 9.82584 13.6541 9.51172 13.6573 9.27734C13.6606 9.04297 13.6606 8.69955 13.6573 8.24707C13.6541 7.79459 13.6525 7.54557 13.6525 7.5C13.6525 7.45443 13.6541 7.20541 13.6573 6.75293C13.6606 6.30045 13.6606 5.95703 13.6573 5.72266C13.6541 5.48828 13.6443 5.17416 13.6281 4.78027C13.6118 4.38639 13.5792 4.05111 13.5304 3.77441C13.4816 3.49772 13.4213 3.26498 13.3497 3.07617C13.2195 2.75065 13.0307 2.46419 12.7833 2.2168C12.5359 1.9694 12.2495 1.7806 11.924 1.65039C11.7351 1.57878 11.5024 1.51855 11.2257 1.46973C10.949 1.4209 10.6137 1.38835 10.2198 1.37207C9.82597 1.35579 9.51184 1.34603 9.27747 1.34277C9.04309 1.33952 8.69804 1.34115 8.24231 1.34766ZM14.9513 4.4043C14.9838 4.97722 15.0001 6.00911 15.0001 7.5C15.0001 8.99089 14.9838 10.0228 14.9513 10.5957C14.8862 11.9499 14.4825 12.998 13.7404 13.7402C12.9982 14.4824 11.95 14.8861 10.5958 14.9512C10.0229 14.9837 8.99102 15 7.50012 15C6.00923 15 4.97734 14.9837 4.40442 14.9512C3.05025 14.8861 2.00208 14.4824 1.25989 13.7402C0.517696 12.998 0.114055 11.9499 0.0489503 10.5957C0.0163977 10.0228 0.00012207 8.99089 0.00012207 7.5C0.00012207 6.00911 0.0163977 4.97722 0.0489503 4.4043C0.114055 3.05012 0.517696 2.00196 1.25989 1.25977C2.00208 0.517574 3.05025 0.113933 4.40442 0.0488282C4.97734 0.0162757 6.00923 0 7.50012 0C8.99102 0 10.0229 0.0162757 10.5958 0.0488282C11.95 0.113933 12.9982 0.517574 13.7404 1.25977C14.4825 2.00196 14.8862 3.05012 14.9513 4.4043Z"
					/>
				</clipPath>
				<clipPath id="facebook" clipPathUnits="objectBoundingBox">
					<path
						transform={"scale(" + 1 / 14 + "," + 1 / 14 + ")"}
						d="M11.3751 0C12.0982 0 12.7164 0.256725 13.2299 0.770182C13.7434 1.28364 14.0001 1.90191 14.0001 2.625V11.375C14.0001 12.0981 13.7434 12.7164 13.2299 13.2298C12.7164 13.7433 12.0982 14 11.3751 14H9.66153V8.57682H11.4753L11.7488 6.46224H9.66153V5.11328C9.66153 4.773 9.73293 4.5178 9.87573 4.34766C10.0185 4.17752 10.2965 4.09245 10.7097 4.09245L11.8217 4.08333V2.19661C11.4389 2.14193 10.8981 2.11458 10.1993 2.11458C9.3729 2.11458 8.7121 2.35764 8.21687 2.84375C7.72164 3.32986 7.47403 4.01649 7.47403 4.90365V6.46224H5.65112V8.57682H7.47403V14H2.62508C1.90198 14 1.28372 13.7433 0.770258 13.2298C0.256801 12.7164 7.62939e-05 12.0981 7.62939e-05 11.375V2.625C7.62939e-05 1.90191 0.256801 1.28364 0.770258 0.770182C1.28372 0.256725 1.90198 0 2.62508 0H11.3751Z"
					/>
				</clipPath>
				<clipPath id="filter" clipPathUnits="objectBoundingBox">
					<path
						transform={"scale(" + 1 / 16 + "," + 1 / 16 + ")"}
						d="M16 3.32C16 3.74667 15.8569 4.08 15.5707 4.32L9.48293 10.52V15.24V15.32C9.48293 15.7733 9.26179 16 8.81951 16C8.74146 16 8.62439 15.9733 8.46829 15.92L8.42927 15.88L6.86829 14.96C6.63415 14.8267 6.51707 14.6267 6.51707 14.36V10.52L0.468293 4.36C0.156096 4.12 0 3.77334 0 3.32C0 2.94666 0.13008 2.63333 0.390244 2.38C0.650408 2.12667 0.949592 2 1.28781 2H1.36585H14.7512C15.1154 2.02667 15.4146 2.16667 15.6488 2.42C15.8829 2.67333 16 2.97333 16 3.32Z"
					/>
				</clipPath>
				<clipPath id="menu" clipPathUnits="objectBoundingBox">
					<path
						transform={"scale(" + 1 / 15 + "," + 1 / 15 + ")"}
						d="M0.75 2.44444H14.25C14.4531 2.44444 14.6289 2.37298 14.7773 2.23003C14.9258 2.08709 15 1.91783 15 1.72222C15 1.52662 14.9258 1.35735 14.7773 1.21441C14.6289 1.07147 14.4531 1 14.25 1H0.75C0.546874 1 0.371094 1.07147 0.222656 1.21441C0.0742178 1.35735 0 1.52662 0 1.72222C0 1.91783 0.0742178 2.08709 0.222656 2.23003C0.371094 2.37298 0.546874 2.44444 0.75 2.44444ZM14.25 12.5556H0.75C0.546874 12.5556 0.371094 12.627 0.222656 12.77C0.0742178 12.9129 0 13.0822 0 13.2778C0 13.4734 0.0742178 13.6427 0.222656 13.7856C0.371094 13.9285 0.546874 14 0.75 14H14.25C14.4531 14 14.6289 13.9285 14.7773 13.7856C14.9258 13.6427 15 13.4734 15 13.2778C15 13.0822 14.9258 12.9129 14.7773 12.77C14.6289 12.627 14.4531 12.5556 14.25 12.5556ZM14.25 6.77778H0.75C0.546874 6.77778 0.371094 6.84925 0.222656 6.99219C0.0742178 7.13513 0 7.3044 0 7.5C0 7.6956 0.0742178 7.86487 0.222656 8.00781C0.371094 8.15075 0.546874 8.22222 0.75 8.22222H14.25C14.4531 8.22222 14.6289 8.15075 14.7773 8.00781C14.9258 7.86487 15 7.6956 15 7.5C15 7.3044 14.9258 7.13513 14.7773 6.99219C14.6289 6.84925 14.4531 6.77778 14.25 6.77778Z"
					/>
				</clipPath>
			</svg>
		</header>
	);
}
